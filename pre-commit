#!/usr/bin/env bash
# Git pre-commit hook that runs multiple hooks specified in pre-commit.d.
# Make sure this script is executable. Bypass hooks with git commit --no-verify.

###########################################################
# CONFIGURATION:
# pre-commit hooks to be executed. They should be in the same .git/hooks/pre-commit.d
# folder. Hooks should return 0 if successful and nonzero to cancel the
# commit. They are executed in the order in which they are listed.
HOOKS="pre-commit.d/phpcs-pre-commit"
###########################################################
# There should be no need to change anything below this line.

. "$(dirname -- "$0")/canonicalize_filename.sh"

# exit on error
set -e

# Absolute path to this script, e.g. /home/user/bin/foo.sh
SCRIPT="$(canonicalize_filename "$0")"

# Absolute path this script is in, thus /home/user/bin
SCRIPT_PATH="$(dirname -- "$SCRIPT")"


for hook in ${HOOKS}
do
    echo "Running hook: $hook"
    # run hook if it exists
    # if it returns with nonzero exit with 1 and thus abort the commit
    if [ -f "$SCRIPT_PATH/$hook" ]; then
        "$SCRIPT_PATH/$hook"
        if [ $? != 0 ]; then
            exit 1
        fi
    else
        echo "Error: file $hook not found."
        echo "Aborting commit. Make sure the hook is in $SCRIPT_PATH and executable."
        echo "You can disable it by removing it from the list in $SCRIPT."
        echo "You can skip all pre-commit hooks with --no-verify (not recommended)."
        exit 1
    fi
done
